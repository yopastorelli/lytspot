/**
 * Script para fazer deploy dos servi√ßos para o ambiente de produ√ß√£o
 * @version 1.0.0 - 2025-03-12
 * @description Atualiza os dados de servi√ßos no servidor de produ√ß√£o
 */

import axios from 'axios';
import dotenv from 'dotenv';
import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';
import { dirname } from 'path';

// Configura√ß√£o para ESM
const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);
const rootDir = path.resolve(__dirname, '..');

// Carregar vari√°veis de ambiente
dotenv.config({ path: path.join(rootDir, '.env') });

// Servi√ßos atualizados conforme solicitado
const servicosAtualizados = [
  {
    nome: 'Ensaio Fotogr√°fico Pessoal',
    descricao: 'Sess√£o individual em loca√ß√£o externa ou est√∫dio, ideal para redes sociais, uso profissional ou pessoal. Inclui dire√ß√£o de poses, corre√ß√£o b√°sica de cor e entrega digital em alta resolu√ß√£o.',
    preco_base: 350.00,
    duracao_media_captura: '1 a 2 horas',
    duracao_media_tratamento: '7 dias √∫teis',
    entregaveis: '20 fotos editadas em alta resolu√ß√£o',
    possiveis_adicionais: 'Edi√ß√£o Mediana, Edi√ß√£o Avan√ßada',
    valor_deslocamento: 'Gratuito at√© 20 km do centro de Curitiba (excedente de R$ 1,20/km)'
  },
  {
    nome: 'Ensaio Externo de Casal ou Fam√≠lia',
    descricao: 'Sess√£o fotogr√°fica em ambiente externo para casais ou fam√≠lias, com foco em momentos naturais e espont√¢neos. Inclui dire√ß√£o de poses e edi√ß√£o b√°sica.',
    preco_base: 450.00,
    duracao_media_captura: '2 a 4 horas',
    duracao_media_tratamento: '10 dias √∫teis',
    entregaveis: '30 fotos editadas em alta resolu√ß√£o',
    possiveis_adicionais: 'Edi√ß√£o Mediana, Edi√ß√£o Avan√ßada',
    valor_deslocamento: 'Gratuito at√© 20 km do centro de Curitiba (excedente de R$ 1,20/km)'
  },
  {
    nome: 'Cobertura Fotogr√°fica de Evento Social',
    descricao: 'Registro fotogr√°fico completo de eventos sociais como anivers√°rios, formaturas e confraterniza√ß√µes. Inclui edi√ß√£o b√°sica e entrega digital.',
    preco_base: 800.00,
    duracao_media_captura: '4 horas',
    duracao_media_tratamento: '10 dias √∫teis',
    entregaveis: '40 fotos editadas em alta resolu√ß√£o',
    possiveis_adicionais: 'Edi√ß√£o Mediana, Edi√ß√£o Avan√ßada',
    valor_deslocamento: 'Gratuito at√© 20 km do centro de Curitiba (excedente de R$ 1,20/km)'
  },
  {
    nome: 'Filmagem de Evento Social (Solo)',
    descricao: 'Capta√ß√£o de v√≠deo para eventos sociais, incluindo edi√ß√£o b√°sica com trilha sonora e entrega em formato digital de alta qualidade.',
    preco_base: 1200.00,
    duracao_media_captura: '4 horas',
    duracao_media_tratamento: '14 dias √∫teis',
    entregaveis: 'V√≠deo editado de 3-5 minutos em alta resolu√ß√£o',
    possiveis_adicionais: 'Edi√ß√£o Mediana, Edi√ß√£o Avan√ßada',
    valor_deslocamento: 'Gratuito at√© 20 km do centro de Curitiba (excedente de R$ 1,20/km)'
  },
  {
    nome: 'Fotografia A√©rea com Drone',
    descricao: 'Captura de imagens a√©reas de propriedades, eventos ou loca√ß√µes, com equipamento profissional e piloto certificado.',
    preco_base: 700.00,
    duracao_media_captura: '1 a 2 horas',
    duracao_media_tratamento: '7 dias √∫teis',
    entregaveis: '15 fotos em alta resolu√ß√£o com edi√ß√£o b√°sica',
    possiveis_adicionais: 'Edi√ß√£o Mediana, Edi√ß√£o Avan√ßada',
    valor_deslocamento: 'Gratuito at√© 20 km do centro de Curitiba (excedente de R$ 1,50/km)'
  },
  {
    nome: 'Filmagem A√©rea com Drone',
    descricao: 'Capta√ß√£o de v√≠deos a√©reos para im√≥veis, eventos ou projetos especiais, com equipamento profissional e piloto certificado.',
    preco_base: 900.00,
    duracao_media_captura: '1 a 2 horas',
    duracao_media_tratamento: '10 dias √∫teis',
    entregaveis: 'V√≠deo editado de 1-2 minutos em alta resolu√ß√£o',
    possiveis_adicionais: 'Edi√ß√£o Mediana, Edi√ß√£o Avan√ßada',
    valor_deslocamento: 'Gratuito at√© 20 km do centro de Curitiba (excedente de R$ 1,50/km)'
  },
  {
    nome: 'Pacote VLOG Family (Ilha do Mel ou Outros Lugares)',
    descricao: 'Documenta√ß√£o em v√≠deo e foto da sua viagem em fam√≠lia, com edi√ß√£o profissional e entrega em formato digital.',
    preco_base: 1500.00,
    duracao_media_captura: '4 a 6 horas',
    duracao_media_tratamento: '14 dias √∫teis',
    entregaveis: 'V√≠deo editado de 3-5 minutos + 30 fotos em alta resolu√ß√£o',
    possiveis_adicionais: 'Edi√ß√£o Mediana, Edi√ß√£o Avan√ßada',
    valor_deslocamento: 'Sob consulta (depende da localiza√ß√£o)'
  },
  {
    nome: 'Pacote VLOG Friends & Community',
    descricao: 'Cobertura fotogr√°fica e de v√≠deo para grupos de amigos ou comunidades, perfeita para registrar viagens, encontros ou eventos colaborativos.',
    preco_base: 1800.00,
    duracao_media_captura: '6 a 8 horas',
    duracao_media_tratamento: '14 dias √∫teis',
    entregaveis: 'V√≠deo editado de 5-7 minutos + 40 fotos em alta resolu√ß√£o',
    possiveis_adicionais: 'Edi√ß√£o Mediana, Edi√ß√£o Avan√ßada',
    valor_deslocamento: 'Sob consulta (depende da localiza√ß√£o)'
  }
];

/**
 * Faz login na API e obt√©m um token de autentica√ß√£o
 * @param {string} apiUrl URL base da API
 * @returns {Promise<string>} Token de autentica√ß√£o
 */
async function obterToken(apiUrl) {
  try {
    console.log(`üîê Autenticando na API: ${apiUrl}/auth/login`);
    
    const response = await axios.post(`${apiUrl}/auth/login`, {
      email: 'admin@lytspot.com.br',
      password: 'admin123'
    });
    
    if (response.data && response.data.token) {
      console.log('‚úÖ Autentica√ß√£o bem-sucedida!');
      return response.data.token;
    } else {
      throw new Error('Token n√£o encontrado na resposta');
    }
  } catch (error) {
    console.error('‚ùå Erro ao obter token:', error.message);
    if (error.response) {
      console.error('Detalhes do erro:', error.response.data);
    }
    throw error;
  }
}

/**
 * Atualiza os servi√ßos na API remota
 * @param {string} apiUrl URL base da API
 * @param {string} token Token de autentica√ß√£o
 * @returns {Promise<void>}
 */
async function atualizarServicosRemotamente(apiUrl, token) {
  try {
    console.log('üîÑ Iniciando atualiza√ß√£o dos servi√ßos remotamente...');
    
    // 1. Primeiro, excluir todos os servi√ßos existentes
    console.log('üóëÔ∏è Excluindo servi√ßos existentes...');
    
    // 1.1 Obter lista de servi√ßos existentes
    const listaResponse = await axios.get(`${apiUrl}/pricing`, {
      headers: { Authorization: `Bearer ${token}` }
    });
    
    const servicosExistentes = listaResponse.data;
    console.log(`üìä Encontrados ${servicosExistentes.length} servi√ßos existentes.`);
    
    // 1.2 Excluir cada servi√ßo
    for (const servico of servicosExistentes) {
      console.log(`üóëÔ∏è Excluindo servi√ßo ID ${servico.id}: ${servico.nome}`);
      await axios.delete(`${apiUrl}/pricing/${servico.id}`, {
        headers: { Authorization: `Bearer ${token}` }
      });
    }
    
    console.log('‚úÖ Todos os servi√ßos existentes foram exclu√≠dos.');
    
    // 2. Criar os novos servi√ßos
    console.log('üÜï Criando novos servi√ßos...');
    
    for (const servico of servicosAtualizados) {
      console.log(`‚ûï Criando servi√ßo: ${servico.nome}`);
      await axios.post(`${apiUrl}/pricing`, servico, {
        headers: { Authorization: `Bearer ${token}` }
      });
    }
    
    console.log('‚úÖ Todos os novos servi√ßos foram criados com sucesso!');
    
  } catch (error) {
    console.error('‚ùå Erro ao atualizar servi√ßos remotamente:', error.message);
    if (error.response) {
      console.error('Detalhes do erro:', error.response.data);
    }
    throw error;
  }
}

/**
 * Fun√ß√£o principal que executa o deploy dos servi√ßos
 */
async function main() {
  try {
    console.log('üöÄ Iniciando deploy dos servi√ßos para produ√ß√£o...');
    
    // Definir a URL da API
    const apiUrl = process.env.PRODUCTION_API_URL || 'https://lytspot.onrender.com/api';
    console.log(`üì° API URL: ${apiUrl}`);
    
    // Obter token de autentica√ß√£o
    const token = await obterToken(apiUrl);
    
    // Atualizar servi√ßos remotamente
    await atualizarServicosRemotamente(apiUrl, token);
    
    console.log('‚ú® Deploy conclu√≠do com sucesso!');
    
  } catch (error) {
    console.error('‚ùå Erro durante o deploy:', error.message);
    process.exit(1);
  }
}

// Executar a fun√ß√£o principal
main();
