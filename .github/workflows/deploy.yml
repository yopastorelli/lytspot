name: Deploy Astro to GitHub Pages

on:
  push:
    branches:
      - main  # Aciona o workflow em pushs na branch main
  workflow_dispatch:  # Permite disparo manual do workflow

permissions:
  contents: write  # Permissão para gravar na branch gh-pages

jobs:
  build:
    runs-on: ubuntu-latest
    concurrency:
      group: deploy-astro  # Evita múltiplas execuções concorrentes
      cancel-in-progress: true  # Cancela workflows anteriores se um novo for iniciado

    steps:
      # 1. Checkout do código
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Configurar Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18  # Certifique-se de usar a mesma versão que no ambiente local

      # 3. Cache de dependências (opcional, para acelerar builds futuros)
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # 4. Instalar dependências
      - name: Install dependencies
        run: npm install

      # 5. Construir o projeto
      - name: Build project
        run: npm run build

      # 6. Listar arquivos para depuração
      - name: List build output
        run: ls -R ./dist

      # 7. Verificar se o arquivo CNAME existe
      - name: Ensure CNAME file
        run: |
          echo "www.lytspot.com.br" > ./dist/CNAME
          echo "CNAME file content:"
          cat ./dist/CNAME

      # 8. Deploy para a branch gh-pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          keep_files: true  # Mantém arquivos existentes, caso necessário
