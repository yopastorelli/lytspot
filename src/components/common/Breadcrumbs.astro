---
/**
 * Componente de Breadcrumbs com marcação estruturada Schema.org
 * @version 1.0.1 - 2025-03-15
 */

export interface BreadcrumbItem {
  label: string;
  url: string;
  current?: boolean;
}

interface Props {
  items: BreadcrumbItem[];
  position?: 'top' | 'bottom';
  className?: string;
}

const { 
  items, 
  position = 'top', 
  className = '' 
} = Astro.props;

const baseUrl = 'https://lytspot.com.br';

// Preparar dados estruturados para breadcrumbs
const breadcrumbsSchema = {
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  "itemListElement": items.map((item, index) => ({
    "@type": "ListItem",
    "position": index + 1,
    "name": item.label,
    "item": `${baseUrl}${item.url}`
  }))
};

// Classes condicionais baseadas na posição
const containerClasses = position === 'bottom' 
  ? 'py-2 px-4 md:px-0 text-xs opacity-70 hover:opacity-100 transition-opacity duration-300'
  : 'py-2 px-4 md:px-0 text-xs text-gray-500';
---

<nav aria-label="Breadcrumb" class={`${containerClasses} ${className}`}>
  <ol class="flex flex-wrap items-center space-x-1">
    {items.map((item, index) => (
      <li class="flex items-center">
        {index > 0 && (
          <span class="mx-1 text-gray-400" aria-hidden="true">/</span>
        )}
        {item.current ? (
          <span class="font-medium" aria-current="page">{item.label}</span>
        ) : (
          <a 
            href={item.url} 
            class="hover:text-primary transition-colors"
          >
            {item.label}
          </a>
        )}
      </li>
    ))}
  </ol>
  
  <!-- Dados estruturados para breadcrumbs (invisíveis para o usuário) -->
  <script type="application/ld+json" set:html={JSON.stringify(breadcrumbsSchema)} />
</nav>
