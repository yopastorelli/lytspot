---
import Container from './common/Container';
import Button from './common/Button';

// Define os itens do menu
const menuItems = [
  { href: '/portfolio', text: 'PORTFOLIO' },
  { href: '/sobre', text: 'SOBRE' },
  { href: '/servicos', text: 'SERVIÇOS' },
  { href: '/precos', text: 'ORÇAMENTO' },
];

// Acessa o pathname da URL atual corretamente
const currentPath = new URL(Astro.request.url).pathname;
---
<header class="fixed w-full z-50 bg-light/90 backdrop-blur-sm shadow-soft">
  <Container>
    <nav class="flex items-center justify-between py-4">
      <!-- Logo -->
      <a href="/" class="text-2xl font-bold text-primary flex items-center gap-2">
        <img src="/images/azul fundo branco.png" alt="LYTSPOT" class="h-16" />
      </a>

      <!-- Mobile menu button - Melhorado -->
      <button
        id="menu-toggle"
        class="md:hidden text-neutral hover:text-primary focus:outline-none focus:ring-2 focus:ring-primary p-2 rounded-md transition-all duration-300 ease-in-out"
        aria-label="Toggle menu"
      >
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M4 6h16M4 12h16M4 18h16"
            class="transition-transform duration-300"
          ></path>
        </svg>
      </button>

      <!-- Desktop menu -->
      <div class="hidden md:flex items-center gap-8">
        {menuItems.map(item => (
          <a 
            href={item.href}
            class={`text-neutral hover:text-primary transition-colors ${item.href === currentPath ? 'text-primary font-semibold' : ''}`}
          >
            {item.text}
          </a>
        ))}
        <Button 
          variant="dark-blue" 
          href="/contato" 
          className="text-center w-full justify-center bg-[#0a1e4d] hover:bg-[#0a1e4d]/90"
        >
          CONTATO
        </Button>
      </div>
    </nav>
  </Container>

  <!-- Mobile menu - Completamente redesenhado -->
  <div
    id="mobile-menu"
    class="hidden fixed top-0 right-0 w-full md:w-80 h-screen z-50 bg-light shadow-xl transform translate-x-full transition-transform duration-300 ease-in-out md:hidden"
  >
    <div class="flex flex-col h-full p-6 overflow-y-auto">
      <div class="flex justify-between items-center mb-8">
        <a href="/" class="text-xl font-bold text-primary">
          <img src="/images/azul fundo branco.png" alt="LYTSPOT" class="h-10" />
        </a>
        <!-- Close button - Melhorado -->
        <button
          id="close-menu"
          class="text-neutral hover:text-primary focus:outline-none focus:ring-2 focus:ring-primary p-2 rounded-full transition-all duration-300 ease-in-out transform hover:rotate-90"
          aria-label="Close menu"
        >
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M6 18L18 6M6 6l12 12"
            ></path>
          </svg>
        </button>
      </div>
      
      <!-- Menu Items - Redesenhado -->
      <div class="flex flex-col space-y-6 mt-4">
        {menuItems.map(item => (
          <a 
            href={item.href}
            class={`text-lg font-medium text-neutral hover:text-primary transition-colors border-b border-gray-200 pb-2 ${item.href === currentPath ? 'text-primary font-semibold' : ''}`}
          >
            {item.text}
          </a>
        ))}
        <div class="pt-4">
          <Button 
            variant="dark-blue" 
            href="/contato" 
            size="lg" 
            className="w-full justify-center bg-[#0a1e4d] hover:bg-[#0a1e4d]/90"
          >
            CONTATO
          </Button>
        </div>
      </div>
      
      <!-- Informações de contato no menu -->
      <div class="mt-auto pt-8 border-t border-gray-200">
        <p class="text-sm text-neutral mb-2 font-medium">Entre em contato:</p>
        <a href="mailto:contato@lytspot.com.br" class="text-sm text-primary hover:underline block mb-1">
          contato@lytspot.com.br
        </a>
        <a href="tel:+5541998880303" class="text-sm text-primary hover:underline block">
          +55 (41) 99888-0303
        </a>
      </div>
    </div>
  </div>

  <!-- Overlay para o fundo quando o menu está aberto -->
  <div id="menu-overlay" class="hidden fixed inset-0 bg-dark/50 z-40 md:hidden backdrop-blur-sm"></div>

  <script>
    const menuToggle = document.getElementById('menu-toggle');
    const mobileMenu = document.getElementById('mobile-menu');
    const closeMenu = document.getElementById('close-menu');
    const menuOverlay = document.getElementById('menu-overlay');

    function toggleMenu(show: boolean) {
      if (!mobileMenu || !menuOverlay) return;
      
      if (show) {
        // Mostrar o overlay primeiro
        menuOverlay.classList.remove('hidden');
        
        // Mostrar o menu com animação de deslizamento
        mobileMenu.classList.remove('hidden');
        // Pequeno delay para permitir a transição
        setTimeout(() => {
          mobileMenu.classList.remove('translate-x-full');
          document.body.classList.add('overflow-hidden');
        }, 10);
      } else {
        // Esconder o menu com animação de deslizamento
        mobileMenu.classList.add('translate-x-full');
        
        // Aguardar a transição terminar antes de esconder completamente
        setTimeout(() => {
          mobileMenu.classList.add('hidden');
          menuOverlay.classList.add('hidden');
          document.body.classList.remove('overflow-hidden');
        }, 300);
      }
    }

    if (menuToggle) {
      menuToggle.addEventListener('click', () => toggleMenu(true));
    }

    if (closeMenu) {
      closeMenu.addEventListener('click', () => toggleMenu(false));
    }

    // Close menu when clicking on overlay
    if (menuOverlay) {
      menuOverlay.addEventListener('click', () => toggleMenu(false));
    }

    // Close menu on window resize if desktop breakpoint is reached
    window.addEventListener('resize', () => {
      if (window.innerWidth >= 768) { // md breakpoint
        toggleMenu(false);
      }
    });
    
    // Fechar o menu quando um link é clicado
    const menuLinks = mobileMenu?.querySelectorAll('a');
    if (menuLinks) {
      menuLinks.forEach(link => {
        link.addEventListener('click', () => toggleMenu(false));
      });
    }
  </script>
</header>
